/* 
 * CyberSource Merged Spec
 *
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * OpenAPI spec version: 0.0.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using NUnit.Framework;
using CyberSource.Api;

namespace CyberSource.Test
{
    /// <summary>
    ///  Class for testing TransactionBatchesApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class TransactionBatchesApiTests
    {
        private TransactionBatchesApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new TransactionBatchesApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of TransactionBatchesApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' TransactionBatchesApi
            //Assert.IsInstanceOfType(typeof(TransactionBatchesApi), instance, "instance is a TransactionBatchesApi");
        }

        
        /// <summary>
        /// Test GetTransactionBatchDetails
        /// </summary>
        [Test]
        public void GetTransactionBatchDetailsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //instance.GetTransactionBatchDetails(id);
            
        }
        
        /// <summary>
        /// Test GetTransactionBatchId
        /// </summary>
        [Test]
        public void GetTransactionBatchIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //var response = instance.GetTransactionBatchId(id);
            //Assert.IsInstanceOf<PtsV1TransactionBatchesIdGet200Response> (response, "response is PtsV1TransactionBatchesIdGet200Response");
        }
        
        /// <summary>
        /// Test GetTransactionBatches
        /// </summary>
        [Test]
        public void GetTransactionBatchesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTime? startTime = null;
            //DateTime? endTime = null;
            //var response = instance.GetTransactionBatches(startTime, endTime);
            //Assert.IsInstanceOf<PtsV1TransactionBatchesGet200Response> (response, "response is PtsV1TransactionBatchesGet200Response");
        }
        
    }

}
